---
import Logo from "./Logo.astro";
import Theme from "./Theme.astro";

const path = Astro.url.pathname;
const page = "/" + path.split("/")[1];

const paths: {
	href: string;
	item: any;
}[] = [
	{ href: "/about", item: "About" },
	{
		href: "/projects",
		item: "Projects",
	},
	{
		href: "/blog",
		item: "Blog",
	},
];
---

<div class="nav">
	<div class="left">
		<Logo />
		{
			paths.map(({ href, item }) => (
				<a
					href={href}
					class:list={{
						active: href === page,
						pagelink: true,
					}}
				>
					{item}
				</a>
			))
		}
	</div>
	<div class="right">
		<Theme />
	</div>
</div>

<style>
	a {
		all: unset;
	}

	.nav {
		position: fixed;
		top: 0;
		left: 0;
		width: calc(100% - 40px);
		backdrop-filter: blur(10px);
		height: 60px;
		display: flex;
		justify-content: space-between;
		align-items: center;
		border-bottom: 1px solid rgb(from var(--accent-primary) r g b / 10%);
		padding: 0 20px;
		z-index: 1;
		gap: 10px;
	}

	.left {
		display: flex;
		flex-direction: row;
		flex-shrink: 1;
		align-items: center;
		overflow: hidden;
		overflow-x: scroll;
		gap: 10px;
	}

	.left::-webkit-scrollbar {
		display: none;
	}

	.right {
		display: flex;
		flex-direction: row;
		flex-shrink: 0;
	}

	.pagelink {
		all: unset;
		cursor: pointer;
		padding: 4px;
		border-radius: 4px;
		border: 1px solid rgb(from var(--accent-primary) r g b / 0%);
		color: rgb(from var(--accent-primary) r g b / 70%);
		transition:
			border-color 0.2s,
			color 0.2s;
	}

	.pagelink:hover,
	.pagelink:focus {
		border-color: rgb(from var(--accent-primary) r g b / 20%);
		color: rgb(from var(--accent-primary) r g b / 85%);
	}

	.pagelink.active {
		border-color: rgb(from var(--accent-primary) r g b / 40%);
		color: rgb(from var(--accent-primary) r g b / 100%);
	}
</style>
