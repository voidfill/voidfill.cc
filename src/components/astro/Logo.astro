---
interface Props {
	size?: number;
	ref?: boolean;
	cutout?: boolean;
}

const { size = 30, ref = true, cutout = false } = Astro.props;

const id = Math.random().toString(36).substring(10);
---

<a
	href="/"
	class:list={{
		logo: true,
		ref: ref,
		cutout: cutout,
	}}
	aria-label="Index Page"
	aria-disabled={ref ? "false" : "true"}
>
	<svg>
		<foreignObject mask={`url(#${id})`}>
			<div class="center" style="background-color: var(--accent-primary);"></div>
		</foreignObject>
		<mask id={id} x="0" y="0">
			<rect x="0" y="0" fill="white"></rect>
			<text x={size * 0.118 + "px"} y={size * 0.775 + "px"}>
				{" "}
				voidf:
			</text>
			<text x={size * 2.0775 + "px"} y={size * 0.775 + "px"} class="slashes"> // </text>
		</mask>
	</svg>
</a>

<style define:vars={{ s: size + "px" }}>
	.logo {
		display: block;
		font-size: calc(var(--s) * 0.8);
		line-height: calc(var(--s) * 0.8);
	}

	.logo:not(.ref) {
		pointer-events: none;
	}

	.logo:not(.cutout) {
		background-color: var(--background-primary);
	}

	.logo,
	svg,
	foreignObject,
	mask,
	rect,
	.center {
		width: calc(var(--s) * 2.7);
		height: var(--s);
	}

	.center {
		display: flex;
		flex-direction: row;
		justify-content: center;
		align-items: center;
		white-space: nowrap;
	}

	.real-text,
	text {
		font-family: "Zilla Slab", serif;
		font-weight: 600;
	}

	.slashes {
		font-weight: 800;
	}
</style>
